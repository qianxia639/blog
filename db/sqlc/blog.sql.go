// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: blog.sql

package db

import (
	"context"
)

const incrViews = `-- name: IncrViews :exec
UPDATE blogs
SET
    views = views + 1
WHERE id = $1
`

func (q *Queries) IncrViews(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, incrViews, id)
	return err
}

const insertBlog = `-- name: InsertBlog :one
INSERT INTO blogs (
    owner_id, type_id, title, content, image
) VALUES (
    $1, $2, $3, $4, $5
)
RETURNING id, owner_id, type_id, title, content, image, views, created_at, updated_at
`

type InsertBlogParams struct {
	OwnerID int64  `json:"owner_id"`
	TypeID  int64  `json:"type_id"`
	Title   string `json:"title"`
	Content string `json:"content"`
	Image   string `json:"image"`
}

func (q *Queries) InsertBlog(ctx context.Context, arg InsertBlogParams) (Blog, error) {
	row := q.db.QueryRowContext(ctx, insertBlog,
		arg.OwnerID,
		arg.TypeID,
		arg.Title,
		arg.Content,
		arg.Image,
	)
	var i Blog
	err := row.Scan(
		&i.ID,
		&i.OwnerID,
		&i.TypeID,
		&i.Title,
		&i.Content,
		&i.Image,
		&i.Views,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
