// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: comment.sql

package db

import (
	"context"
)

const insertComment = `-- name: InsertComment :one
INSERT INTO comments (
    blog_id, comment_id, nickname, avatar, content
) VALUES (
    $1, $2, $3, $4, $5
)
RETURNING id, blog_id, comment_id, nickname, avatar, content, created_at
`

type InsertCommentParams struct {
	BlogID    int64  `json:"blog_id"`
	CommentID int64  `json:"comment_id"`
	Nickname  string `json:"nickname"`
	Avatar    string `json:"avatar"`
	Content   string `json:"content"`
}

func (q *Queries) InsertComment(ctx context.Context, arg InsertCommentParams) (Comment, error) {
	row := q.db.QueryRowContext(ctx, insertComment,
		arg.BlogID,
		arg.CommentID,
		arg.Nickname,
		arg.Avatar,
		arg.Content,
	)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.BlogID,
		&i.CommentID,
		&i.Nickname,
		&i.Avatar,
		&i.Content,
		&i.CreatedAt,
	)
	return i, err
}
